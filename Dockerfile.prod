# syntax=docker/dockerfile:1

##########
# Builder
##########
ARG RUBY_VERSION=3.0.3
FROM ruby:${RUBY_VERSION} AS builder

ENV RAILS_ENV=production \
    BUNDLE_DEPLOYMENT=1 \
    BUNDLE_WITHOUT="development:test" \
    RAILS_LOG_TO_STDOUT=1 \
    RAILS_SERVE_STATIC_FILES=1

RUN apt-get update && apt-get install -y --no-install-recommends \
  build-essential libpq-dev git nodejs yarn libvips libvips-dev imagemagick \
  && rm -rf /var/lib/apt/lists/*

WORKDIR /usr/src/app

# Bundle cache
COPY Gemfile Gemfile.lock ./
RUN gem install bundler -v 2.3.7 \
 && bundle config set deployment 'true' \
 && bundle config set without 'development test' \
 && bundle install --jobs 4 --retry 3

# App code
COPY . .

# ---- Build-time args just to satisfy boot during precompile ----
ARG RAILS_MASTER_KEY
ARG SENDGRID_API_KEY=dummy
ARG SECRET_KEY_BASE=dummy
ARG STRIPE_SECRET_KEY=dummy
ARG APP_HOST=snoofly.co.uk

ENV RAILS_MASTER_KEY=${RAILS_MASTER_KEY} \
    SENDGRID_API_KEY=${SENDGRID_API_KEY} \
    SECRET_KEY_BASE=${SECRET_KEY_BASE} \
    APP_HOST=${APP_HOST}

# Precompile assets

#############
# Final image
#############
FROM ruby:${RUBY_VERSION}

RUN apt-get update && apt-get install -y --no-install-recommends \
    libvips imagemagick postgresql-client \
 && rm -rf /var/lib/apt/lists/*

WORKDIR /usr/src/app

COPY --from=builder /usr/src/app /usr/src/app
COPY --from=builder /usr/local/bundle /usr/local/bundle

ENV RAILS_ENV=production \
    BUNDLE_DEPLOYMENT=1 \
    BUNDLE_WITHOUT="development:test" \
    RAILS_LOG_TO_STDOUT=1 \
    RAILS_SERVE_STATIC_FILES=1

EXPOSE 3000
CMD ["bash", "-lc", "bundle exec puma -C config/puma.rb"]