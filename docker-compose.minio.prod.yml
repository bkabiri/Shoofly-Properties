name: snoofly-minio

networks:
  snoofly-net:
    external: true

volumes:
  minio_data:

services:
  minio-snoofly:
    image: minio/minio:latest   # or minio/minio:latest
    container_name: minio-snoofly
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    expose:
      - "9000"   # S3 API
      - "9001"   # Console
    networks:
      - snoofly-net
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 3s
      retries: 10

  minio-mc-init:
    image: bitnami/minio-client:latest
    container_name: minio-mc-init
    depends_on:
      minio-snoofly:
        condition: service_healthy
    entrypoint: ["/bin/bash","-lc"]
    command: |
      set -e
      mc alias set myminio http://minio-snoofly:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}
      # Create bucket if it doesn’t exist
      mc ls myminio/${MINIO_BUCKET} >/dev/null 2>&1 || mc mb myminio/${MINIO_BUCKET}
      # Make bucket public (optional)
      mc anonymous set download myminio/${MINIO_BUCKET}
      # CORS
      cat >/tmp/cors.json <<'JSON'
      [
        {
          "AllowedOrigin": [
            "https://snoofly.co.uk",
            "https://www.snoofly.co.uk",
            "http://localhost:3000",
            "http://app.localhost"
          ],
          "AllowedMethod": ["GET","PUT","POST","DELETE"],
          "AllowedHeader": ["*"],
          "ExposeHeader": ["ETag","Location"],
          "MaxAgeSeconds": 3000
        }
      ]
      JSON
      mc anonymous set-json myminio/${MINIO_BUCKET} /tmp/cors.json
      echo '✅ MinIO init done.'
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET: ${MINIO_BUCKET}
      MINIO_PUBLIC_HOST: ${MINIO_PUBLIC_HOST}
    networks:
      - snoofly-net
    restart: "no"