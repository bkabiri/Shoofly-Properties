# docker-compose.app.prod.yml
name: snoofly-app

networks:
  snoofly-net:
    external: true   # run once: docker network create snoofly-net

services:
  web-snoofly:
    # If you push an image, keep this:
    image: your-registry/snoofly-web:latest
    # If you want to build on the server instead, comment the line above and use:
    # build:
    #   context: .
    #   dockerfile: Dockerfile.prod

    container_name: web-snoofly
    restart: unless-stopped
    env_file:
      - .env.production
    environment:
      RAILS_ENV: production
      RAILS_LOG_TO_STDOUT: "1"
      RAILS_SERVE_STATIC_FILES: "1"
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}

      # DB
      DB_HOST: ${DB_HOST:-db-snoofly}
      DB_PORT: ${DB_PORT:-5432}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME_PROD: ${DB_NAME_PROD}

      # Redis
      REDIS_URL: ${REDIS_URL:-redis://redis-snoofly:6379/1}

      # Host/app URLs
      APP_HOST: ${APP_HOST:-snoofly.co.uk}
      APP_URL: https://${APP_HOST}
      ACTION_CABLE_URL: wss://${APP_HOST}/cable

      # Active Storage via S3-compatible (MinIO)
      ACTIVE_STORAGE_SERVICE: s3
      AWS_ACCESS_KEY_ID: ${MINIO_ROOT_USER}
      AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
      AWS_REGION: "us-east-1"
      AWS_S3_ENDPOINT: http://minio-snoofly:9000
      AWS_S3_FORCE_PATH_STYLE: "true"
      AWS_S3_BUCKET: ${S3_BUCKET}

    expose:
      - "3000"
    networks: [snoofly-net]
    # IMPORTANT: no depends_on to caddy to avoid cycles
    command: >
      bash -lc "bundle exec puma -C config/puma.rb"

  caddy-snoofly:
    image: caddy:2-alpine
    container_name: caddy-snoofly
    restart: unless-stopped
    networks: [snoofly-net]
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile.prod:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - web-snoofly   # one-way dependency (OK)

volumes:
  caddy_data:
  caddy_config: